<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.ovirt.engine.sdk</groupId>
  <artifactId>java-generator</artifactId>
  <packaging>jar</packaging>
  <version>1.1.1-SNAPSHOT</version>

  <description>This is the oVirt Engine Java SDK code generator</description>
  <url>http://www.ovirt.org/Java-sdk</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>

    <!-- Make sure that we always compile with UTF-8 encoding: -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Default values used when retrieving the XML schema and the RSDL from
         the engine artifacts: -->
    <engine.version>3.6.8</engine.version>

    <!-- The version of the JAXB XJC compiler to use: -->
    <jaxb.version>2.2.4-1</jaxb.version>

  </properties>

  <dependencies>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-xjc</artifactId>
      <version>${jaxb.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>${jaxb.version}</version>
    </dependency>

  </dependencies>

  <build>

    <resources>

      <!-- This is needed because the templates used by the code generator
           are in the same directory than the Java source, and they aren't
           included in the resulting jar file by default: -->
      <resource>
        <directory>src/main/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>

    </resources>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jvnet.jaxb2.maven2</groupId>
        <artifactId>maven-jaxb22-plugin</artifactId>
        <version>0.8.1</version>
        <executions>
          <execution>
            <id>generate-entities</id>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <generatePackage>org.ovirt.engine.sdk.entities</generatePackage>
          <extension>true</extension>
        </configuration>
      </plugin>

    </plugins>

  </build>

  <profiles>

    <!-- This profile is used to download the XML schema and the RSDL from a
         live engine artifacts. To run it use the validate phase and enable
         the profile:

         mvn validate -Pupdate-metadata

         After doing this remember to add update the files in the source
         control system. -->
    <profile>
      <id>update-metadata</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>update-metadata</id>
                <phase>validate</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>org.ovirt.engine.api.rsdl.RsdlIOManager</mainClass>
                  <arguments>
                    <argument>${basedir}/src/main/resources/</argument>
                  </arguments>
                  <includePluginDependencies>true</includePluginDependencies>
                  <includeProjectDependencies>false</includeProjectDependencies>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.ovirt.engine.api</groupId>
                <artifactId>restapi-definition</artifactId>
                <version>${engine.version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- This profile is used to regenerate the SDK from the XML schema and
         the RSDL documents. To run it use the validate phase and enable the
         profile:

         mvn validate -Pupdate-code

         After generating the code remember to add the modifications to the
         source code control system. -->
    <profile>
      <id>update-code</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>update-code</id>
                <phase>validate</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>org.ovirt.engine.sdk.generator.java.Main</mainClass>
                  <arguments>
                    <argument>--memory</argument>
                    <argument>${basedir}/src/main/resources/memory.properties</argument>
                    <argument>--xsd</argument>
                    <argument>${basedir}/src/main/resources/api.xsd</argument>
                    <argument>--xjb</argument>
                    <argument>${basedir}/src/main/resources/api.xjb</argument>
                    <argument>--rsdl</argument>
                    <argument>${basedir}/src/main/resources/rsdl.xml</argument>
                  </arguments>
                  <includePluginDependencies>false</includePluginDependencies>
                  <includeProjectDependencies>true</includeProjectDependencies>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
